<?lassoscript//............................................................................////	pageblocks: (c) 2002-2007 http://www.pageblocks.org/////............................................................................/*	{fileName=		fwpActn_searchState.ctag }	{rsrcType=		tag }	{rsrcName=		fwpActn_searchState }	{rsrcHTTP=		www.pageblocks.org/refc/fwpActn_searchState }		{lassoVrsnMin=	8.1.0 }	{lassoVrsnMax=	8.5.3 }	{author=		Greg Willits }	{authorEmail=	subscribe to pbTalk at www.pageblocks.org/talk/ }	{authorHTTP=	www.pageblocks.org }	{desc=			This routine stores and restores search terms of search					pages so that when a user returns to found results list					page from a detail page, the list is restored to what the 					user searched for. }	{maintvsrn=		1.2.0 }	{maintrelease=	5.2.0 }	{maintdate=		2007-06-09}	{maintauthor=	Greg Willits }	{maintnotes=	updated debug and error handling systems }	{maintvsrn=		1.1.0 }	{maintrelease=	5.1.0 }	{maintdate=		2006-05-30}	{maintauthor=	Greg Willits }	{maintnotes=	added tagTrace }	{maintvsrn=		1.0 }	{maintrelease=	5.0.0 b5 }	{maintdate=		2006-02-02 }	{maintauthor=	Greg Willits }	{maintnotes=	initial release }*///............................................................................define_tag:'fwpActn_searchState', -priority='replace',	-optional='table',	-optional='id';	$fw_debug ? $fw_tagTracer->(add:'fwpActn_searchState');	local:		'fw_srchTable'		= @local:'table',		'fw_cookieID'		= @local:'id',		'fw_srchPage'		= ($fw_requestPage->'urlFilePath'),		'fw_srchTerm'		= string,		'fw_srchStore'		= string,		'fw_srchRestore'	= array,		'fw_cookieNm'		= string,		'fw_modelIsLoaded'	= false,		'fw_tableModel'		= null;		#fw_srchPage->(replace:'/', '_');	#fw_cookieNm = $fw_gAppPrefix + '_srchInfo' + #fw_srchPage + #fw_cookieID;//	............................................................................//	if the current search action is to restore, let`s get the data from the cookie//	and recreate the action param vars and values that the form would have created		if: (params->find:'-restore');		if: (cookie:#fw_cookieNm);			fwpCnfg_makeVars: (cookie:#fw_cookieNm);		/if;			if: $fw_debug;			var:'api_fwpActn_searchSet_srchRestore' = (cookie:#fw_cookieNm);		/if;		else: (params->find:'-reset');			cookie_set:#fw_cookieNm = '', -path='/';		else;	//	it`s a new search, so we have to save the search terms the form just created//	use the tableModel inputNames array	to look up the list of form input names//	create a string of this structure: {actionParam}={value}\r repeated for each submitted search item//	for every form param name that we find a defined variable, we know the form submitted that item//	so we save it with the value		#fw_modelIsLoaded = (fwpActn_loadTableModel:#fw_srchTable);			if: #fw_modelIsLoaded;			#fw_tableModel = @($fw_gDbTableModels->find:#fw_srchTable);				iterate: (#fw_tableModel->find:'inputNames'), #fw_srchTerm;				if: var_defined:#fw_srchTerm;					#fw_srchStore += (#fw_srchTerm + '=' + (var:(#fw_srchTerm)) + '\r');				/if;				if: var_defined:(#fw_srchTerm + 'Op');					#fw_srchStore += (#fw_srchTerm + 'Op=' + (var:(#fw_srchTerm + 'Op')) + '\r');				/if;			/iterate;			#fw_srchStore->(removeTrailing:'\r');						if: $fw_debug;				var:'api_fwpActn_searchSet_srchStore' = #fw_srchStore;			/if;				cookie_set:#fw_cookieNm = #fw_srchStore, -path='/';			else;			// 	we don't normally report or log this error because			//	the likely cause is that the tableModel file was not found			//	which the file loading process would have already reported			//	and we don't need multiple reports of that fact					($fw_debug >= fw_kVerbose) ? $fw_tagTracer->(add:'fwpActn_searchState', -ERROR = 'tableModel not loaded for table ' + #fw_srchTable);			($fw_debug >= fw_kVerbose) && $fw_criticalLog ? log_critical:('pbError : fwpActn_searchState could not load tableModel for table ' + #fw_srchTable);			($fw_debug >= fw_kVerbose) ? $fw_error->(insert:'5201' = 'fwpActn_searchState');			/if;	/if;/define_tag;?>